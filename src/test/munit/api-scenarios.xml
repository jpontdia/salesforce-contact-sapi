<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" 
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/validation 
		http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd 
		http://www.mulesoft.org/schema/mule/ee/core 
		http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
		http://www.mulesoft.org/schema/mule/http
 		http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
		http://www.mulesoft.org/schema/mule/core 
		http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit 
		http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  
		http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">

	<munit:config name="api-scenarios.xml" />

	<munit:dynamic-port propertyName="http.port"/>

    <http:request-config name="HTTP_Request_Configuration">
        <http:request-connection host="0.0.0.0" port="${http.port}" />
    </http:request-config>
    
	<munit:test name="test-api-scenarios">
		
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="get:\contact:api-config" />
			<munit:enable-flow-source value="get:\contact\(id):api-config" />
			<munit:enable-flow-source value="post:\contact:application\json:api-config" />
			<munit:enable-flow-source value="delete:\contact\(id):api-config" />
			<munit:enable-flow-source value="query" />
			<munit:enable-flow-source value="get-by-filter" />
			<munit:enable-flow-source value="get-by-id" />
			<munit:enable-flow-source value="post" />
		</munit:enable-flow-sources>

		<munit:behavior >
			<munit:set-event doc:name="get payload"  >
				<munit:payload value='#[%dw 2.0&#10;output application/json&#10;---&#10;readUrl("classpath://post-payload.dwl")]' />
			</munit:set-event>
			<set-variable doc:name="save payload"
				value="#[payload]" 
				variableName="sourcePayload"/>

			<logger doc:name=" payload"
				level="INFO" 
				message="#[payload]"/>
		</munit:behavior>

		<munit:execution>
			<logger doc:name="start" 
				level="INFO"
				message="Main flow - start"/>

			<flow-ref
				doc:name="remove test record"
				name="test-remove-test-record" />

			<flow-ref
				doc:name="create record"
				name="test-post" />

			<flow-ref
				doc:name="get record"
				name="test-get" />
		</munit:execution>
	</munit:test>
	
	<!-- *************************************************** -->
	<!-- **** SUB FLOWS                                ***** -->
	<!-- *************************************************** -->	
	<sub-flow name="test-remove-test-record">
		<ee:transform doc:name="get query filter" >
			<ee:variables >

				<ee:set-variable variableName="firstName" >
					<![CDATA[payload.firstName]]>
				</ee:set-variable>
				<ee:set-variable variableName="lastName" >
					<![CDATA[payload.lastName]]>
				</ee:set-variable>

			</ee:variables>
		</ee:transform>

		<http:request
			method="GET"
			doc:name="get record by name"
			config-ref="HTTP_Request_Configuration"
			path="/api/contact">

			<http:headers><![CDATA[#[output application/java --- { "Content-Type" : "application/json" }]]]></http:headers>
			<http:query-params><![CDATA[#[output application/java
				---
				{
					"lastName" : vars.lastName,
					"firstName" : vars.firstName
				}]]]>
			</http:query-params>
			<http:response-validator>
				<http:success-status-code-validator values="200" />
			</http:response-validator>
		</http:request>

		<choice doc:name="record exist?">
			
			<when expression="payload[0] != null">
			
				<logger doc:name="delete" 
					level="INFO" 
					message='#[ "Record exist in database and needs to be delete it, id=" ++ payload[0].id  default "" ]' />
					
				<http:request
					method="DELETE"
					doc:name="delete"
					config-ref="HTTP_Request_Configuration"
					path='#[ "/api/contact/" ++ (payload[0].id  default "") ]' >

					<http:response-validator>
						<http:success-status-code-validator values="200" />
					</http:response-validator>
				</http:request>
			</when>

		</choice>

	</sub-flow>


	<!-- ****************************************************************************************************** -->	
	<sub-flow
		name="test-post">

		<logger doc:name="create" 
			level="INFO" 
			message="Create record" />
		
		<set-payload
			value="#[vars.sourcePayload]"
			doc:name="payload"/>	

		<http:request
			method="POST"
			doc:name="POST"
			config-ref="HTTP_Request_Configuration"
			path="/api/contact">
			<http:headers><![CDATA[#[output application/java
				---
				{
					"Content-Type" : "application/json"
				}]]]>
			</http:headers>
			<http:response-validator>
				<http:success-status-code-validator values="201" />
			</http:response-validator>
		</http:request>

		<ee:transform doc:name="get id" >
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="id"><![CDATA[%dw 2.0
					import dw::core::Strings
					var location = attributes.headers.location
					---
					if (location != null ) 
						(location Strings::substringAfterLast "/")
					else null
					]]>
				</ee:set-variable>
			</ee:variables>
		</ee:transform>
		
		<logger doc:name="id"
			level="INFO" 
			message='#["Record created id: " ++ vars.id]' />
			
		<set-payload
			value="#[vars.sourcePayload]"
			doc:name="payload" />

		<http:request
			method="POST"
			doc:name="retry again"
			config-ref="HTTP_Request_Configuration"
			path="/api/contact">
			<http:headers><![CDATA[#[output application/java
				---
				{
					"Content-Type" : "application/json"
				}]]]>		
			</http:headers>
			<http:response-validator>
				<http:success-status-code-validator values="409" />
			</http:response-validator>
		</http:request>
		
		<logger doc:name="record duplicated" 
			level="INFO" 
			message='The record is already present in the database' />
			
	</sub-flow>
	

	<!-- ****************************************************************************************************** -->
	<sub-flow name="test-get">
			
		<logger doc:name="get record"
			level="INFO"  
			message='#["Get record id=" ++ vars.id]' />
			
		<http:request
			method="GET"
			doc:name="get resource by id"
			config-ref="HTTP_Request_Configuration"
			path='#["/api/contact/" ++ vars.id]'>
			<http:uri-params><![CDATA[#[output application/java
				---
				{
					"id" : vars.id
				}]]]>
			</http:uri-params>
			<http:response-validator>
				<http:success-status-code-validator values="200" />
			</http:response-validator>
		</http:request>

		<logger doc:name="result"
			level="INFO"  
			message='#[payload]' />
		
		<validation:is-true
			doc:name="id's are equal?"
			config-ref="Validation_Config"
			expression="#[vars.id == payload.id]" />
	</sub-flow>	
</mule>
